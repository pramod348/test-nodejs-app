@Library("jenkins-shared-libraries") _
pipeline {
    agent any  // This tells Jenkins to run the pipeline on any available agent
environment {
    CGROUP_MANAGER = 'cgroupfs'
}
    
    tools {
        jdk 'JAVA_HOME'
        nodejs 'NODEJS_HOME'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/pramod348/CICD-Project.git']])
            }
        }
    
        stage('helloworld') {
            steps {
                helloWorld()  // Calling the helloWorld function from shared library
            }
        }
        
        stage('Load Environment variables') {
            steps {
                script {
                    loadEnv('.env')  // Load environment variables from the .env file
                    echo 'Loaded SONAR_URL: ${env.SONAR_HOST_URL}'
                    echo 'Loaded SONAR_PROJECT_KEY: ${env.SONAR_PROJECT_KEY}'
                }
            }
        }

    /*
        stage('SonarQube Analysis') {
            steps {
                script {
                  sonarQubeIntegration()  // Perform SonarQube integration
                }
            }
         }
       */

       stage('npm stage') {
         steps {
           echo 'building artifact'
           sh '''
             npm install
             npm run deploy
             '''
            }
          }

       stage('building docker image') {
         steps {
            echo 'building docker image'
            sh 'podman build -t pramod348/uat:${BUILD_NUMBER} .'
             }
           }

        stage('pushing image to docker hub') {
          steps {
            echo 'pushing image to docker hub'
            sh 'podman login -u pramod348 -p Bruno@348 docker.io'
            sh 'podman push pramod348/uat:${BUILD_NUMBER}'
            }
        }
                
    }
}
